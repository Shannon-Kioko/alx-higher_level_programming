# The ``0-add_integer`` module
============================
How to use 0-add_integer.py
============================
This library has one function ``add_integer``

# File: 0-add_integer.txt

# Test case 1: Valid inputs
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> divisor = 2
>>> matrix_divided(matrix, divisor)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

# Test case 2: Valid inputs with float numbers
>>> matrix = [[2.5, 3.5], [4.5, 5.5]]
>>> divisor = 1.5
>>> matrix_divided(matrix, divisor)
[[1.67, 2.33], [3.0, 3.67]]

# Test case 3: Zero divisor
>>> matrix = [[1, 2], [3, 4], [5, 6]]
>>> divisor = 0
>>> matrix_divided(matrix, divisor)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

# Test case 4: Non-numeric element in the matrix
>>> matrix = [[1, 2, 'a'], [4, 5, 6], [7, 8, 9]]
>>> divisor = 2
>>> matrix_divided(matrix, divisor)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case 5: Rows with different sizes in the matrix
>>> matrix = [[1, 2, 3], [4, 5], [7, 8, 9]]
>>> divisor = 2
>>> matrix_divided(matrix, divisor)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

# Test case 6: Invalid matrix (not a list of lists)
>>> matrix = 'not a matrix'
>>> divisor = 2
>>> matrix_divided(matrix, divisor)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case 7: Invalid divisor (not a number)
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> divisor = 'not a number'
>>> matrix_divided(matrix, divisor)
Traceback (most recent call last):
...
TypeError: div must be a number
